{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","store/actions/projectActions.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","class","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","createProject","getFirestore","authorId","add","firstName","lastName","Date","catch","err","ownprops","match","params","data","deleteProject","projectId","doc","delete","history","push","handleClick","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","set","CreateProject","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53018825.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{ props.profile.initials }</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: \"LOGIN_SUCCESS\" });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type:'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default function SignedOutLinks() {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/>: <SignedOutLinks />;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nexport default function Notifications(props) {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div class=\"card z-dept-0\">\r\n                <div class=\"card-content\">\r\n                    <span class=\"card-title\">Notifications\r\n                        <ul class=\"notifications\">\r\n                            { notifications && notifications.map(item => {\r\n                                return (\r\n                                    <li key={item.id}>\r\n                                        <span className='pink-text'>{item.user}</span>\r\n                                        <span> {item.content}</span>\r\n                                        <div class=\"grey-text note-date\">{moment(item.time.toDate()).fromNow()}</div>\r\n                                    </li>\r\n                                )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nexport default function ProjectSummary({project}) {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project => {\r\n                return(\r\n                    <Link to={'/project/'+ project.id} key={project.id}>\r\n                        <ProjectSummary project={project} key={project.id} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard conatiner\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n        connect(mapStateToProps),\r\n        firestoreConnect([\r\n            { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n            { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n        ])\r\n    )(Dashboard)","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to db\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: \"CREATE_PROJECT\", project })\r\n        }).catch((err) => {\r\n            dispatch({ type: \"CREATE_PROJECT_ERROR\", err});\r\n        })\r\n        \r\n    }\r\n};\r\n\r\nexport const deleteProject = (projectId) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').doc(projectId).delete()\r\n            .then(() => {\r\n                dispatch({ type: \"DELETE_PROJECT\" })\r\n            }).catch((err) => {\r\n                dispatch({ type: \"DELETE_PROJECT_ERROR\", err })\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateProject = (project) => {\r\n    \r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from \"moment\";\r\nimport { deleteProject } from '../../store/actions/projectActions';\r\n\r\nconst handleClick = (props) => {\r\n    const id = props.match.params.id;\r\n    props.deleteProject(id);\r\n    props.history.push('/');\r\n}\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth, profile } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if (project) {\r\n        return(\r\n            <div className=\"container section project\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ project.title }</span>\r\n                        <p>{ project.content }</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                        {(profile.firstName == project.authorFirstName && profile.lastName == project.authorLastName) ? (<div className=\"input-field\">\r\n                            <button className=\"btn grey lighten-1 z-depth-0\" onClick={() => handleClick(props)}>Remove</button>\r\n                        </div>): null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =  (state, ownprops) => {\r\n    // console.log(state)\r\n    const id = ownprops.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects? projects[id]: null\r\n    return{\r\n        project,\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        deleteProject: (id) => dispatch(deleteProject(id))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p>{authError}</p>: null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor='firstName'>FirstName</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor='lastName'>LastName</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n                    </div>\r\n                    <div class=\"red-text center\">\r\n                        {authError ? <p>{authError}</p>: null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor='title'>Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor='content'>Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case \"LOGIN_ERROR\":\r\n            console.log('Login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case \"LOGIN_SUCCESS\":\r\n            console.log('Login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case \"SIGNOUT_SUCCESS\":\r\n            console.log('SignOut Success');\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: []\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case \"CREATE_PROJECT\":\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('Create project error', action.err);\r\n            return state;\r\n        case 'DELETE_PROJECT':\r\n            console.log('Deleted project', action.project);\r\n            return state;\r\n        case 'DELETE_PROJECT_ERROR':\r\n            console.log('Delete project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBiL56i5vvA7InpsOT-HO8Y96fz5mTfii8\",\r\n    authDomain: \"mario-plan-644ae.firebaseapp.com\",\r\n    databaseURL: \"https://mario-plan-644ae.firebaseio.com\",\r\n    projectId: \"mario-plan-644ae\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"692554079883\",\r\n    appId: \"1:692554079883:web:e8b2b31b10eb672b\"\r\n};\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducer/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport firebase from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n    compose (\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase),\n        reactReduxFirebase(firebase, {useFirestoreForProfile: true, userProfile: 'users',  attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n"],"sourceRoot":""}